[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager


authc.loginUrl = /login.xhtml
authc.successUrl = /person.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

# Use default password matcher (SHA-256, 500000 hash iterations)
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256


# DataSource Setup
datasource1 = org.apache.shiro.jndi.JndiObjectFactory
datasource1.resourceName = java:app/tenant_a

datasource2 = org.apache.shiro.jndi.JndiObjectFactory
datasource2.resourceName = java:app/tenant_b

# JDBC Realm
jdbcRealm1 = realm.CustomJDBCRealm
jdbcRealm1.credentialsMatcher = $credentialsMatcher
jdbcRealm1.dataSource = $datasource1

jdbcRealm2 = realm.CustomJDBCRealm
jdbcRealm2.credentialsMatcher = $credentialsMatcher
jdbcRealm2.dataSource = $datasource2

# Filter Setup
[urls]
/javax.faces.resource/** = anon
/login.xhtml = authc
/users.xhtml = authc, roles[admin]
/index.html = authc, roles[user]